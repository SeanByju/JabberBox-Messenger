<% layout('/layouts/boilerplate') %>
<h1>Welcome <%= foundUser.username %>!</h1>
    <div class="row">
        <div class="col-2" style="border: 1px solid red;">
            <div class="container mt-4" >
                <h3>Friends Online:</h3>
                <!--will populate with user's friends -->
                <ul>
                    <% for(let friend of foundUser.friends){ %>
                        <li><%= friend.username %> </li>
                    <% } %>  
                </ul> 
                <a href="/jabberbox/<%= foundUser._id %>/search">Add Friends</a>
            </div>

        </div>
        <div class="col-10" style="border: 1px solid blue;">
            <div class="container mt-4">
                <div id="chat-window">
                    <div id="output"></div>
                    <div id="feedback"></div>
                </div>
                <form id="form" action="">
                    <input id="recipient" type="text" placeholder="Recipient"><br>
                    <input id="message" type="text" placeholder="Message"><br>
                    <button class="btn btn-primary" id="send">Submit</button>
                </form>
            </div>
        </div>
    </div>




<script>
    const socket = io.connect('http://localhost:3000');
    const username = '<%- foundUser.username %>'


    //query DOM
    let form = document.getElementById('form');
    let recipient = document.getElementById('recipient')
    let message = document.getElementById('message');
    let output = document.getElementById('output');
    let feedback = document.getElementById('feedback');

    //emmit events
    form.addEventListener('submit', (e)=>{
        e.preventDefault();
        socket.emit('chat message', {
            recipient: recipient.value,
            message: message.value,
            handle: username,
        })
        message.value = ''; //clear message input after it's sent

    })

    message.addEventListener('keypress', ()=>{
        socket.emit('typing', {
            handle: username,
        })
    })

    //listen for events
    socket.on('chat message', (data)=>{
        output.innerHTML += '<p><strong>' + data.handle + ': </strong>' + data.message + '</p>';
        feedback.innerHTML = "";
    })

    socket.on('typing', (data)=>{
        feedback.innerHTML = `${data.handle} is typing...`
    })
    socket.onAny((event, ...args) => {
        console.log(event, args);
    });
</script>
